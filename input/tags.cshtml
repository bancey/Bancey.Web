ArchiveSources: => GetString("PostSources")
ArchiveFilter: => GetBool("IsPost")
ArchiveKey: Tags
ArchiveKeyComparer: => StringComparer.OrdinalIgnoreCase.ToConvertingEqualityComparer()
ArchiveDestination: >
  => GetInt("Index") <= 1 ? $"tags/{NormalizedPath.OptimizeFileName(GetString("GroupKey"))}/index.html" : $"tags/{NormalizedPath.OptimizeFileName(GetString("GroupKey"))}/{GetInt("Index")}.html"
ArchivePageSize: 10
ArchiveOrderKey: Published
ArchiveOrderDescending: true
Title: Tags
ArchiveTitle: => GetString("GroupKey")
---
@if (Document.ContainsKey(Keys.GroupKey))
{
    <div class="tile is-vertical is-parent">
        @Html.Partial("/_posts.cshtml", Document)
        <div class="tile is-child card">
            <div class="card-content">
                <div class="content">
                    <div class="buttons is-centered">
                        @foreach (IDocument tag in OutputPages.Get("tags.html").GetChildren().OrderByDescending(x => x.GetChildren().Count()))
                        {
                            bool buttonEnabled = Document.GetString(Keys.GroupKey).Equals(tag.GetTitle(), StringComparison.OrdinalIgnoreCase);
                            string postCount = tag.GetChildren().Count().ToString();
                            <a href="@Context.GetLink(tag)" class="button is-disabled"> @tag.GetTitle() (@postCount)</a>
                        }
                    </div>
                </div>
            </div>
        </div>  
    </div>
}
else
{ 
    <div class="buttons is-centered">
        @foreach (IDocument tag in Document.GetChildren().OrderByDescending(x => x.GetChildren().Count()))
        {
            string postCount = tag.GetChildren().Count().ToString();
            <a class="button" href="@Context.GetLink(tag)">@tag.GetTitle() (@postCount)</a>
        }
    </div>
}